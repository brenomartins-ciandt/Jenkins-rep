pipeline {
    agent any
	stages {
        // stage ('Getting prerequisites'){
        //     steps {
                
                // sh 'curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
                // sh 'mv /usr/local/bin/docker-compose /usr/bin/docker-compose'
                // sh 'chmod +x /usr/bin/docker-compose'
                // sh 'curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.04.0-ce.tgz \
                //     && tar xzvf docker-17.04.0-ce.tgz \
                //     && mv docker/docker /usr/local/bin \
                //     && rm -r docker docker-17.04.0-ce.tgz'
                // sh 'chmod 777 /usr/local/bin/docker'
        //     }
        // }
        stage ('Building application image'){
            steps {
                sh 'apt-get update \
                    && apt-get install -y sudo \
                    && rm -rf /var/lib/apt/lists/*'
                sh 'echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers'
                sh 'su - Jenkins'
                sh 'usermod -aG docker Jenkins'
                sh 'pwd'
                sh 'ls'
                sh 'whoami'
                sh 'echo $USER'
                // sh 'systemctl start docker'
                sh 'docker ps'
                sh 'docker build -t aplic_java2 -f Dockerfile .'

            }
        }
        stage ('Compose Up Stage'){                
            steps {
                sh 'docker-compose -f docker-compose.yml up -d'
                sleep(5)
            }
        }
        stage ('Setting BD'){
            steps {
                withCredentials ([string(credentialsId: 'senha', variable: 'SENHA')]){
                    sh 'sudo PGPASSWORD=$SENHA psql    --host=localhost    --port=5555    --username=postgres --no-password  --file acesso_init.sql'
                }
            }
        }
    }
}
